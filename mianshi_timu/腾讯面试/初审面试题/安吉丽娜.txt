用Python描述与电梯的关系

首先用Python描述与电梯的关系，我先想到的就是Python中的多线程，为何是多线程，我说下我的理解

我们可以把多部电梯想成Python中的多线程，每一部电梯都是一个独立的线程，我们可以把乘坐电梯的人理解成Python多线程中的数据，我可以选择乘坐任意一部电梯
但是考虑到在同一时刻我们只能乘坐一部电梯，如果在考虑到有专门的VIP电梯，只能供专人使用的话，我就会联想到Python中的线程锁，当电梯被专人使用以后，相当于
我把这部电梯给独占了，其他人并不能在我使用这部电梯的时候共同使用此电梯，直到此电梯我不用了，也就是Python中的线程锁释放的时候，其他人才可以使用，电梯按
下上下楼的按钮的时候，电梯到达最快的是离自己楼层最近的那部，其他的电梯就不会在此等待，这个类似于Python的抢占，也就是先到先得，我们处理数据的时候，我们启
动线程会优先考虑离最方便的，可以提升效率，但是还不影响其他的线程使用



描述下Python中的socket

首先我们要知道socket通信，简单可以理解成就是相同主机或者不同主机间的端口通信，socket通信，我们需要有一个服务端，还有一个客户端。
我们要通信的话，要约定通信的协议，协议又分为TCP还有UDP两种，两种不同协议分别有一些优点和弊端，下面我来简单地说下
tcp协议是有状态的链接，适用于要保证数据安全到达的场景，例如web的请求这些，因为tcp是有状态链接，首先他们会三次握手，四次断开，要保证数据的安全，如果中途发现丢包
他们会重发的，但是弊端也同时存在，因为要保证数据的完整性，所以他们的速度会很慢，传输过程中要检查
udp协议是无状态链接，适用于即时通信软件，例如qq软件或者DNS解析或者区域传输这些，优点是udp的速度快，缺点是虽然速度快，但是不能保证数据的安全到达

我们说完了socket的通信协议以后，我们说下
socket服务端
1、socket服务端我们需要使用socket先约定好我们的IP协议以及通信的协议，是使用tcpd的STREAM 还是使用dup的DRAMG，以及ip的版本我是使用ipv4 还是ipv6
2、约定好通信协议以后，socket创建成功，我们需要让服务器端的socket绑定一个固定的ip地址和端口号，这样的好处在于，因为服务器端要向外一直持续服务器，我们
   把IP地址还有端口号确定以后，服务直接连接这个固定的就可以通信了，服务器的socket如果总是变来变去，客户端哪里会找不到服务器端的
3、我们还需要监听客户端的端口，因为服务器要持续向外提供服务，所以要监听客户端的连接状态
4、前面都做好以后，我们需要把客户端的socket接入进来，不然是没办法和客户端通信的，所以我们还需要使用accpet来接受客户端的消息以及客户端的socket
5、客户端和服务器端都创建好连接以后，我们可以通过send以及recv来发送和接受客户端的消息
6、当我们不用socket的时候，我们需要把套接字关闭，以免占用系统资源

注:socket我们还可以设置成阻塞还有非阻塞，如果当服务器端的socket处于阻塞的状态，虽然client的socket都可以接受进来，但是每次只能和一个通信，当这个client结束以后，才能和下一个通信

socket客户端
1、首先客户端也需要把socket实例化，然后约定好和服务端的通信协议，是使用tcp还有udp
2、客户端这边的socket地址还有套接字是可以绑定或者不绑定都可以的，如果不绑定，会随机生成一个未使用的端口号，最为客户端的socket来通信
3、客户端这边不需要监听还有accept，但是客户端段这里需要connect到服务器端的socket，也就是服务器端约定好的IP加端口号
4、客户端通信，还需要接受服务器端的消息，以及还要发送给服务器端，所以我们还需要使用send还有recv，如果是udp的通信，我们则使用sendto指定服务器端的ip和端口就可以，接受为recvfrom
   如果使用udp的通信，我们就不需要connect到服务端端啦
5、我们需要关闭socket来释放系统资源



